# Generated by Django 5.0.4 on 2024-04-29 03:35

import api.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.IntegerField(default=1)),
                ('like', models.IntegerField(default=5)),
                ('comment', models.IntegerField(default=10)),
                ('share', models.IntegerField(default=20)),
                ('createAt', models.DateTimeField(auto_now_add=True)),
                ('updateAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postId', models.CharField(max_length=255, unique=True, validators=[api.models.validate_with_spectial_charactor])),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('countView', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('countLike', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('countComment', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('countShare', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suburbs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_suburb', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('Suburb', models.CharField(max_length=100)),
                ('State', models.CharField(max_length=10)),
                ('Postcode', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('Combined', models.TextField(max_length=100)),
                ('Latitude', models.FloatField()),
                ('Longitude', models.FloatField()),
                ('CBD', models.FloatField()),
                ('id_old', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0, 'Value must be non-negative')])),
                ('Len', models.FloatField()),
                ('Nearby', models.TextField(null=True)),
                ('Nearby_Dis', models.TextField(null=True)),
                ('Nearby_Dis_List', models.TextField(null=True)),
                ('Nearby_List', models.TextField(null=True)),
                ('Nearby_List_Codes', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_ranking', models.IntegerField(default=0)),
                ('weekly_ranking', models.IntegerField(default=0)),
                ('yesterday_sum_ranking', models.IntegerField(default=0)),
                ('sum_ranking', models.IntegerField(default=0)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.posts')),
            ],
        ),
        migrations.AddField(
            model_name='posts',
            name='suburbs',
            field=models.ForeignKey(default=api.models.get_default_suburb, on_delete=django.db.models.deletion.CASCADE, to='api.suburbs'),
        ),
    ]
